# Generated by Django 5.2.7 on 2025-10-20 11:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccessoryTarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('glass', 'Protective Glass'), ('case', 'Case'), ('cable', 'Cable')], max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='accesuar_image')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('hex_code', models.CharField(blank=True, help_text='Masalan: #FFFFFF', max_length=7, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MemoryOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(help_text='Masalan: 64GB, 128GB, 256GB', max_length=50, unique=True)),
            ],
            options={
                'ordering': ['size'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/images/')),
                ('is_main', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-is_main'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['product', 'price'],
            },
        ),
        migrations.CreateModel(
            name='AccessoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='accessory_images/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('accessory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.accessory')),
            ],
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('VIP', 'VIP'), ('Стандарт', 'Стандарт'), ('Мини', 'Мини')], max_length=100)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('accessories', models.ManyToManyField(blank=True, to='products.accessorytarif')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='categories/icons/')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percent', models.PositiveIntegerField(default=0)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('availability', models.CharField(choices=[('in_stock', 'Есть в наличии'), ('out_of_stock', 'Нет в наличии'), ('pre_order', 'Предзаказ')], default='in_stock', max_length=50)),
                ('warranty', models.CharField(choices=[('6', '6 месяцев'), ('12', '12 месяцев'), ('24', '24 месяца'), ('36', '36 месяцев')], default='12', max_length=50)),
                ('delivery', models.CharField(choices=[('free', 'Бесплатная доставка'), ('courier', 'Доставка курьером'), ('pickup', 'Самовывоз')], default='courier', max_length=50)),
                ('pickup', models.CharField(choices=[('available', 'Доступен в Ташкенте'), ('unavailable', 'Недоступен')], default='available', max_length=50)),
                ('lifespan', models.CharField(choices=[('1', '1 год'), ('3', '3 года'), ('5', '5 лет'), ('10', '10 лет')], default='5', max_length=50)),
                ('manufacturer', models.CharField(choices=[('apple', 'Apple'), ('samsung', 'Samsung'), ('xiaomi', 'Xiaomi'), ('huawei', 'Huawei'), ('other', 'Другой')], default='apple', max_length=50)),
                ('operating_system', models.CharField(blank=True, choices=[('android', 'Android'), ('ios', 'iOS'), ('windows', 'Windows'), ('other', 'Другая')], max_length=100, null=True)),
                ('construction', models.CharField(blank=True, choices=[('foldable', 'Складной'), ('waterproof', 'Влагозащита'), ('standard', 'Обычный')], max_length=100, null=True)),
                ('material', models.CharField(blank=True, choices=[('metal', 'Металл'), ('plastic', 'Пластик'), ('glass', 'Стекло'), ('ceramic', 'Керамика')], max_length=100, null=True)),
                ('sim_type', models.CharField(blank=True, choices=[('nano', 'Nano SIM'), ('micro', 'Micro SIM'), ('e-sim', 'eSIM')], max_length=50, null=True)),
                ('sim_count', models.PositiveIntegerField(choices=[(1, '1 SIM'), (2, '2 SIM'), (3, '3 SIM')], default=1)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='grammda', max_digits=6, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='Masalan: 146.7 x 71.5 x 7.4 mm', max_length=100, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
